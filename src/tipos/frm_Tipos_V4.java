package tipos;


import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import jxl.Cell;
import jxl.CellType;
import jxl.Sheet;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rvanya
 */
public class frm_Tipos_V4 extends javax.swing.JFrame {
    @Override
    public void setTitle(String title) {
        super.setTitle(title); //To change body of generated methods, choose Tools | Templates.
    }
  private File inputFile = new File("D:\\EaSys\\tipos\\loto5z35_2013_14.xls");
  private String cellFilter[] = {"A","B","C","D","E","F"};
//  private String columns[] = {"Dátum","č.1","č.2","č.3","č.4","č.5","Prognosis"};
  private /* MyTableModel */ DefaultTableModel tbmodelXLS;
  private Double wins[];
  private Integer[][] uhadnute = 
          {
           {7,11,1,10,10,3,12,6},
           {8,28,1,15,30,4,24,10},
           {9,63,1,20,60,5,40,15},
           {10,126,1,25,100,6,60,21},
           {11,231,1,30,150,7,84,28},
           {12,396,1,35,210,8,112,36},
           {13,644,1,40,280,9,144,45},
           {14,1001,1,45,360,10,180,55}
          }
  ;
  Integer iOdhadnutPocetCisiel = 12;

    /**
     * Creates new form frm_Tipos
     */
    public frm_Tipos_V4() {
         wins = new Double[3];
         wins[0] = 8500.00;
         wins[1] = 490.00;
         wins[2] = 3.30;
//       updateTblModel(tbmodelXLS,columns);

        initComponents();
         this.setTitle("V4");
         tbmodelXLS = (DefaultTableModel) jTable_XLS.getModel(); // new MyTableModel();
        //jTable_XLS.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        jTable_XLS.setModel(tbmodelXLS);
        
        jTable_XLS.setDefaultRenderer(Integer.class, new DefaultTableCellRenderer() {

            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,int row,int col) {

            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);
            Object o = table.getModel().getValueAt(row, col);
            Integer iVal = 0;
            if (o != null) iVal = (Integer) o;
            if (col == 7) {
                if (iVal > 4) {
                   c.setBackground(Color.YELLOW);
            return c;
                }
                else if (iVal > 3) {
                   c.setBackground(Color.LIGHT_GRAY);
            return c;
                }
                else if (iVal > 2) {
                   c.setBackground(Color.ORANGE);
            return c;
                }
                else 
                c.setBackground(Color.WHITE);
            }

            return c;
            }
            
        }
        
        );
        
        
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Dlg_FileChooser = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser();
        jTF_inputFile = new javax.swing.JTextField();
        jButton_XLS_File = new javax.swing.JButton();
        jButton_Nacitaj = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_XLS = new javax.swing.JTable();
        btn_vyhodnot = new javax.swing.JButton();
        cbTestedEarlierRows = new javax.swing.JComboBox();
        btn_uloz = new javax.swing.JButton();
        cbOdhadnutPocetCisiel = new javax.swing.JComboBox();
        jtf_1ceny = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtf_2ceny = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtf_3ceny = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtf_bezceny = new javax.swing.JTextField();
        jtf_celkom = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        Dlg_FileChooser.setAlwaysOnTop(true);
        Dlg_FileChooser.setMinimumSize(new java.awt.Dimension(604, 448));
        Dlg_FileChooser.setModal(true);

        javax.swing.GroupLayout Dlg_FileChooserLayout = new javax.swing.GroupLayout(Dlg_FileChooser.getContentPane());
        Dlg_FileChooser.getContentPane().setLayout(Dlg_FileChooserLayout);
        Dlg_FileChooserLayout.setHorizontalGroup(
            Dlg_FileChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 604, Short.MAX_VALUE)
        );
        Dlg_FileChooserLayout.setVerticalGroup(
            Dlg_FileChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );

        jFileChooser1.setCurrentDirectory(new java.io.File("D:\\EaSys\\Tipos"));
        jFileChooser1.setMinimumSize(new java.awt.Dimension(586, 377));
        jFileChooser1.setOpaque(true);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTF_inputFile.setText("D:\\EaSys\\tipos\\loto5z35.xls");
        jTF_inputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_inputFileActionPerformed(evt);
            }
        });

        jButton_XLS_File.setText(" XLS súbor");
        jButton_XLS_File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XLS_FileActionPerformed(evt);
            }
        });

        jButton_Nacitaj.setText("Načítaj");
        jButton_Nacitaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_NacitajActionPerformed(evt);
            }
        });

        jTable_XLS.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable_XLS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Den", "C1", "C2", "C3", "C4", "C5", "prognozis", "pocet", "vsadene", "vyhra", "bilancia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_XLS.setColumnSelectionAllowed(true);
        jTable_XLS.setFillsViewportHeight(true);
        jTable_XLS.setRowSelectionAllowed(false);
        jTable_XLS.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable_XLS);
        jTable_XLS.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable_XLS.getColumnModel().getColumnCount() > 0) {
            jTable_XLS.getColumnModel().getColumn(0).setResizable(false);
            jTable_XLS.getColumnModel().getColumn(1).setResizable(false);
            jTable_XLS.getColumnModel().getColumn(1).setPreferredWidth(30);
            jTable_XLS.getColumnModel().getColumn(2).setResizable(false);
            jTable_XLS.getColumnModel().getColumn(2).setPreferredWidth(30);
            jTable_XLS.getColumnModel().getColumn(3).setResizable(false);
            jTable_XLS.getColumnModel().getColumn(3).setPreferredWidth(30);
            jTable_XLS.getColumnModel().getColumn(4).setResizable(false);
            jTable_XLS.getColumnModel().getColumn(4).setPreferredWidth(30);
            jTable_XLS.getColumnModel().getColumn(5).setResizable(false);
            jTable_XLS.getColumnModel().getColumn(5).setPreferredWidth(30);
            jTable_XLS.getColumnModel().getColumn(6).setPreferredWidth(240);
            jTable_XLS.getColumnModel().getColumn(7).setResizable(false);
            jTable_XLS.getColumnModel().getColumn(8).setResizable(false);
            jTable_XLS.getColumnModel().getColumn(9).setResizable(false);
            jTable_XLS.getColumnModel().getColumn(10).setResizable(false);
        }

        btn_vyhodnot.setText("Vyhodnoť");
        btn_vyhodnot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_vyhodnotActionPerformed(evt);
            }
        });

        cbTestedEarlierRows.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cbTestedEarlierRows.setSelectedIndex(9);
        cbTestedEarlierRows.setSelectedItem(10);
        cbTestedEarlierRows.setToolTipText("Počet testovaných/vyhodnocovaných predošlých riadkov");
        cbTestedEarlierRows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTestedEarlierRowsActionPerformed(evt);
            }
        });

        btn_uloz.setText("Ullož");
        btn_uloz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ulozActionPerformed(evt);
            }
        });

        cbOdhadnutPocetCisiel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "6", "7", "8", "9", "10", "11", "12", "13", "14" }));
        cbOdhadnutPocetCisiel.setToolTipText("Počet čísiel, ktoré treba odhadnúť pre rozpis");
        cbOdhadnutPocetCisiel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOdhadnutPocetCisielActionPerformed(evt);
            }
        });

        jtf_1ceny.setText("0");

        jLabel1.setText("1.");

        jLabel2.setText("2.");

        jtf_2ceny.setText("0");

        jLabel3.setText("3");

        jtf_3ceny.setText("0");

        jLabel4.setText("x:");

        jtf_bezceny.setText("0");

        jtf_celkom.setText("0");

        jLabel5.setText("Celkom:");

        jLabel6.setText("Zohladniť predošlých");

        jLabel7.setText("ťahov     TIpovať:");

        jLabel8.setText("čísiel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtf_celkom, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtf_1ceny, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtf_2ceny, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtf_3ceny, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtf_bezceny, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTF_inputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_XLS_File, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .addComponent(btn_vyhodnot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_Nacitaj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbTestedEarlierRows, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbOdhadnutPocetCisiel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_uloz))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTF_inputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_XLS_File)
                    .addComponent(jButton_Nacitaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbTestedEarlierRows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOdhadnutPocetCisiel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_1ceny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jtf_2ceny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jtf_3ceny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jtf_bezceny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jtf_celkom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(btn_vyhodnot)
                    .addComponent(btn_uloz))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void putAtPosition (Integer[][] iOrig, int naIdx, int cislo, int vyskyt) {
        for (int i = 34; i >= 0; i--) { // posun od konca na nizsie pozicie
            if (i > naIdx) {
                iOrig[i][0] = iOrig[i - 1][0];
                iOrig[i][1] = iOrig[i - 1][1];
            }
            else if (i == naIdx) {
                iOrig[i][0] = cislo;
                iOrig[i][1] = vyskyt;
            }
            else break;
        }
    }

    private String getPrognosisForRow(int rw, Integer[][] iBefore) {
        // rw - riadok, pre ktori sa vytvara prognoza
        String pr = "";
        
        
        // spocitanie vyskytu  cisiel v predoslych iBefore tahoch
        //System.out.println("LEGTT:" + iBefore.length);
        Integer[] iCountedBefore = new Integer[35];
        for (int i = 0; i < 35; i++) {
            iCountedBefore[i] = 0;
        }
        for (int i = 0; i < iBefore.length; i++) {
            Integer[] tah = new Integer[5];
            tah = iBefore[i];
           // System.out.println("TAHH:" + /* iBefore.length */ Arrays.deepToString(tah));
            for (int cis = 0; cis < 5; cis++) {
                int ee = tah[cis] - 1;
                iCountedBefore[ee]++;
            }  
        } 
        
        // utriedenie spocitaneho podla poctu vyskytov zostupne (descending) 
        Integer[][] iSortedBefore = new Integer[35][2];
        // naplnenie iSortedBefore sorted-pola nulami
        for (int i = 0; i < 35; i++) {
            iSortedBefore[i][0] = 0; // cisla 1--35
            iSortedBefore[i][1] = 0; // pocet vyskytov
        }
        // triedenie iCountedBefore pola do iSortedBefore sorted-pola
        for (int iNumber = 0; iNumber < 35; iNumber++) { // test cisiel v counted-poli
            
            int cnt = iCountedBefore[iNumber]; // pocet vyskytov
            for (int sortedNum = 0; sortedNum < 35; sortedNum++) { 
                 if (iSortedBefore[sortedNum][1] <= cnt) {
            //System.out.println("POSS: na: " + sortedNum + " cis: " + (iNumber + 1) + " cnt: " + cnt);
                    putAtPosition(iSortedBefore, sortedNum, (iNumber + 1), cnt);
                    break;
                 }
            }
        }
//        System.out.println("LEGTT:" + /* iBefore.length */ Arrays.deepToString(iCountedBefore) + "\n");
//        System.out.println("SORTT:" + /* iBefore.length */ Arrays.deepToString(iSortedBefore) + "\n");
        for (int sortedNum = 0; sortedNum < iOdhadnutPocetCisiel; sortedNum++) { 
            pr = pr + "," + iSortedBefore[sortedNum][0];
        }
        pr = pr.substring(1);
        return pr;
    }

    private String testPr(int rw, String pr) {
       int ex = 0;
       for (int d = 0; d < 5; d++) { // prechod riadku pola iBefore
           if (pr.contains(","+ tbmodelXLS.getValueAt(rw,d + 1) + ","))
               ex++;
       } 
       return ex < 3 ? "---" : "[" + ex + "]"; 
    }
    
    private void jButton_XLS_FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XLS_FileActionPerformed
        jFileChooser1.showDialog(Dlg_FileChooser, "Výber prvého súboru XLS");
        inputFile = jFileChooser1.getSelectedFile();
        if (inputFile!=null) {
            jTF_inputFile.setText(inputFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton_XLS_FileActionPerformed

    private void jButton_NacitajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_NacitajActionPerformed
        try {
            inputFile = new File(jTF_inputFile.getText());
            readXLS(inputFile, cellFilter, tbmodelXLS);
        } catch (IOException ex) {
            Logger.getLogger(frm_Tipos_V4.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BiffException ex) {
          Logger.getLogger(frm_Tipos_V4.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton_NacitajActionPerformed
    public void readXLS(File inputFile,String cellFilter[],DefaultTableModel tbmodel)
           throws IOException, BiffException  {
    File inputWorkbook = inputFile;
    Workbook w;
    WorkbookSettings ws = new WorkbookSettings();
    ws.setEncoding( "cp1250" );
    boolean showDataType = true;
    try {
      w = Workbook.getWorkbook (inputWorkbook, ws);
      // zistim prvu stranu XLS suboru
      Sheet sheet = w.getSheet(0);
      // Hodnoty, ktore potrebujeme
      DecimalFormat df = new DecimalFormat("0");
      //Integer spolu = new Integer(0);
      int rowCount = 0;
      for (int i = 2; i <= sheet.getRows(); i++) {
          Object[] oRowData = new Object[cellFilter.length];   
//         krn.OutPrintln("CLL" + cellFilter.length);
          for (int j = 0; j < cellFilter.length; j++) {
              Cell myCell = sheet.getCell(cellFilter[j] + i);
              CellType type = myCell.getType();

              if (type == CellType.LABEL) {
 //           System.out.print((showDataType ? "# LBL:" : "") + celll.getContents());
                  oRowData[j] = new String(myCell.getContents());
              }
              else if (type == CellType.NUMBER) {
 //           System.out.print((showDataType ? "# NUM:" : "") + celll.getContents());
                  oRowData[j] = new Integer(myCell.getContents().replace(',','.'));
                  //spolu = spolu + (Integer) oRowData[j];
              }
              else if (type == CellType.DATE) {
//            System.out.print((showDataType ? "# DAT:" : "") + celll.getContents());
//            oRowData[j] = new Date(celll.getContents());
                  oRowData[j] = new String(myCell.getContents());
              }
              else {
//            System.out.print((showDataType ? "# ???:" : "") + celll.getContents());
                  oRowData[j] = new String(myCell.getContents());
              }
          //System.out.print(";" + cell.getContents() 
          //+ "[" + type.toString() + "]"
          // );
        }
//        krn.OutPrintln("");
        tbmodel.addRow(oRowData);
        rowCount++;
      }
      // krn.OutPrintln("Spolu v " + inputFile.getName() + "  -> riadokov: " + rowCount + " suma spolu: " + spolu);
      
    } catch (BiffException e) {
      e.printStackTrace();
    }
  } // public void readXLS(File inputFile, DefaultTableModel tbmodel)

    
    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jTF_inputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_inputFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTF_inputFileActionPerformed

    private void btn_vyhodnotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_vyhodnotActionPerformed
        // TODO add your handling code here:
        vyhodnotit();
    }//GEN-LAST:event_btn_vyhodnotActionPerformed

    private void cbTestedEarlierRowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTestedEarlierRowsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTestedEarlierRowsActionPerformed

    private void btn_ulozActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ulozActionPerformed
        // TODO add your handling code here:
        saveData();
    }//GEN-LAST:event_btn_ulozActionPerformed

    private void cbOdhadnutPocetCisielActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOdhadnutPocetCisielActionPerformed
        iOdhadnutPocetCisiel = Integer.parseInt(cbOdhadnutPocetCisiel.getSelectedItem().toString());
    }//GEN-LAST:event_cbOdhadnutPocetCisielActionPerformed

    public void saveData(/* JTable table, File file */){
        try{
           File outputFile = new File(jTF_inputFile.getText().replace(".", "_saved.")); 
           WritableWorkbook workbookSave = Workbook.createWorkbook(outputFile);
           WritableSheet sheetSave = workbookSave.createSheet("Vyhodnotné data", 0);
           WritableCellFormat wcf = new WritableCellFormat();

            //DefaultTableModel model = tbmodelXLS3;
            for (int i = 0; i < tbmodelXLS.getColumnCount(); i++) {
                Label column = new Label(i, 0, tbmodelXLS.getColumnName(i));
                sheetSave.addCell(column);
            }
            int j = 0;
            for (int i = 0; i < tbmodelXLS.getRowCount(); i++) {
/*        
  private String columns_Z[] = {"VS","Meno","Ulica","1","2","3","Suma20140331"
                                ,"Suma20150331","RozdVyuct","ZostPredVyu"
                                ,"ZostPoVyu"};
*/        
                for (j = 0; j < tbmodelXLS.getColumnCount(); j++) {
                    // textove stlpce
                    if (j < 6) {
                       Label row = new Label(j, i + 1,
                               getNotNULLstring(tbmodelXLS.getValueAt(i, j)));
                       sheetSave.addCell(row);
                    }
                    // desatinne cisla
                    else {
                    jxl.write.Number number 
                       = new jxl.write.Number(j, i + 1, getNotNULLdouble(tbmodelXLS.getValueAt(i, j)));
                    /*
                    WritableCell wrc = new WritableCell();
                            new Number(j, i,
                            getNotNULLdouble(tbmodelXLS3.getValueAt(i, j)));
                      */
                    sheetSave.addCell(number);
                        
                    }
                }
            }
            workbookSave.write();
            workbookSave.close();
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    private String getNotNULLstring (Object o) {
        return ((o == null) ? "" : o.toString());
    }

    private Double getNotNULLdouble (Object o) {
        Double db = new Double(0);
        if (o == null) o = "0";
        String v = o.toString();
        if (v.toString().indexOf(".") > 0)
            v = v.substring(0, (o.toString().indexOf(".") - 1));
        try {
        db = (o == null) ? 0.00: (double) (Integer.parseInt(v));
        }
        catch  (Exception ex) {
            System.out.println("EXC-ON " + o.toString());
        }
        return db;
    }

    /**
     * @param args the command line arguments
     */
    
    public void vyhodnotit() {
        Integer iNumTestedRows = Integer.parseInt(cbTestedEarlierRows.getSelectedItem().toString());
        Integer[][] iBefore = new Integer[iNumTestedRows][5];
        Integer[]   iAktRow = new Integer[5];
        Integer     iExists = 0;
        Integer[] iCounters = {0,0,0,0};
        /*
  private Integer[][] uhadnute = 
          {
           {7,11,1,10,10,3,12,6},
           {8,28,1,15,30,4,24,10},
           {9,63,1,20,60,5,40,15},
           {10,126,1,25,100,6,60,21},
           {11,231,1,30,150,7,84,28},
           {12,396,1,35,210,8,112,36},
           {13,644,1,40,280,9,144,45},
           {14,1001,1,45,360,10,180,55}
          }
*/        
        /*
        Integer[] vyhry = new Integer[9];
        // vyber poctu moznych vyhier
        for (int i = 0; i < 8; i++) {
            vyhry = uhadnute[i];
            if (vyhry[0] == iOdhadnutPocetCisiel) break;
        }
        // rozdelenie poctu vyhier podla poctu trafenych cisiel
        Integer[][] vyhryx = new Integer[3][4];
        vyhryx[0][0] = vyhry[1]; // vsadena suma
        vyhryx[1][0] = vyhry[1]; // vsadena suma
        vyhryx[2][0] = vyhry[1]; // vsadena suma
        // pocet vyhier pri uhadnutych 5 cisiel
        vyhryx[0][1] = vyhry[3]; // pocet 1. cien
        vyhryx[0][2] = vyhry[4]; // pocet 2. cien
        vyhryx[0][3] = vyhry[5]; // pocet 3. cien
        // pocet vyhier pri uhadnutych 4 cisiel
        vyhryx[1][1] = 0; // pocet 1. cien
        vyhryx[1][2] = vyhry[6]; // pocet 2. cien
        vyhryx[1][3] = vyhry[7]; // pocet 3. cien
        // pocet vyhier pri uhadnutych 3 cisiel
        vyhryx[2][1] = 0; // pocet 1. cien
        vyhryx[2][2] = 0; // pocet 2. cien
        vyhryx[2][3] = vyhry[8]; // pocet 3. cien
        */
        // test vsetkych riadkov tabulky, a vytvorenie prognozy
        for (int i = 0; i < tbmodelXLS.getRowCount(); i++) {
            // ked su to prve riadky, ktorych je menej ako testovanych
            // doplnuje sa len iBefore zasobnik predoslych tahov k vyhodnoteniu
            if (i < iNumTestedRows) { 
                for (int e = 0; e < 5; e++) {
                    iBefore[i][e] = (Integer) tbmodelXLS.getValueAt(i,e + 1);
                }
                tbmodelXLS.setValueAt("****", i, 6);  // zapis prognozy
                continue;
            }
            
            else {
                iCounters[0]++;
                // vyhodnotenie + zapis vyhodnotenia + posun iBefore o riadok
                String prg = getPrognosisForRow(i,iBefore);
                
                tbmodelXLS.setValueAt(prg, i, 6);  // zapis prognozy
                String[] progn = prg.split(",");
                for (int e = 0; e < 5; e++) {
                    iAktRow[e] = (Integer) tbmodelXLS.getValueAt(i,e + 1);
                }
                
                iExists = 0;
                for (int e = 0; e < progn.length; e++) { // prechod pola prognoz
                     for (int a = 0; a < 5; a++) { // prechod aktualneho riadku
                         if (iAktRow[a] == Integer.parseInt(progn[e])) {
                             iExists++;
                         }
                     }
                }
                
                // posun pola iBefore hore
                for (int e = 1; e < iNumTestedRows; e++) { // prechod pola iBefore
                    for (int d = 0; d < 5; d++) { // prechod riadku pola iBefore
                       iBefore[e - 1][d] = iBefore[e][d];
                    }
                }    
                // pridanie iAktRow do IBefore
                for (int d = 0; d < 5; d++) {
                    iBefore[iNumTestedRows - 1][d] = iAktRow[d];
                }
               tbmodelXLS.setValueAt(iExists, i, 7);
               if (iExists > 4) iCounters[1]++;
               else if (iExists > 3) iCounters[2]++;
               else if (iExists > 2) iCounters[3]++;
            }

            jtf_celkom.setText(iCounters[0].toString());
            jtf_1ceny.setText(iCounters[1].toString());
            jtf_2ceny.setText(iCounters[2].toString());
            jtf_3ceny.setText(iCounters[3].toString());
            jtf_bezceny.setText(String.valueOf(iCounters[0] - iCounters[1] - iCounters[2] - iCounters[3]));
            
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_Tipos_V4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_Tipos_V4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_Tipos_V4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_Tipos_V4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_Tipos_V4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Dlg_FileChooser;
    private javax.swing.JButton btn_uloz;
    private javax.swing.JButton btn_vyhodnot;
    private javax.swing.JComboBox cbOdhadnutPocetCisiel;
    private javax.swing.JComboBox cbTestedEarlierRows;
    private javax.swing.JButton jButton_Nacitaj;
    private javax.swing.JButton jButton_XLS_File;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTF_inputFile;
    private javax.swing.JTable jTable_XLS;
    private javax.swing.JTextField jtf_1ceny;
    private javax.swing.JTextField jtf_2ceny;
    private javax.swing.JTextField jtf_3ceny;
    private javax.swing.JTextField jtf_bezceny;
    private javax.swing.JTextField jtf_celkom;
    // End of variables declaration//GEN-END:variables
}
