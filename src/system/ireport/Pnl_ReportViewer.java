/*
 * Program je s��as�ou syst�mu EaSys V2
 * 
 * EaSys je volne ��rite�n� k�d.
 */

package system.ireport;
import eoc.IEOC_IReport;
import eoc.IEOC_Object;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JPanel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;
import system.Kernel;
/**
 *
 * @author rvanya
 */
public class Pnl_ReportViewer extends /* javax.swing.JPanel */ eoc.widgets.PObject{
    HashMap hm = null;
    Kernel krn;
    public IEOC_Object myObjectID;

    /**
     * Creates new form ReportViewer
     */
    public Pnl_ReportViewer() {
        myObjectID = this;
        initComponents();
    }
    
    
    @SuppressWarnings("unchecked")
    public void viewReport(eoc.IEOC_IReport rpt) {
        String jasperFile = rpt.getReportName();
        hm = rpt.getParameterMap();
   String jrxmlFileName = jasperFile + ".jrxml";
   String jasperFileName = jasperFile + ".jasper";
   String pdfFileName = jasperFile + ".pdf";


   // Generate jasper print
   JasperPrint jprint;
   JasperReport report = null;
   InputStream is = null;
       try {
            try {
                URL sRes = ClassLoader.getSystemResource(jasperFileName.replace(".jasper", ""));
                if (sRes == null)
                    System.out.println("URL is null for:" + jasperFileName.replace(".jasper", ""));
                else
                    System.out.println("HURRA_AAAAA: URL for:" + jasperFileName.replace(".jasper", "") + " is: " + sRes.toString());
                sRes = ClassLoader.getSystemResource(jasperFileName);
                if (sRes == null)
                    System.out.println("URL is null for:" + jasperFileName);
                else
                    System.out.println("HURRA_BBBBB: URL for:" + jasperFileName + " is: " + sRes.toString());
                 is = //getClass().getResourceAsStream(jasperFileName); 
                    ClassLoader.getSystemResourceAsStream(jasperFileName);
            System.out.println(">>>AAA>>> " + jasperFileName + " MyCn:" + (MyCn!=null) + " iStream:" + (is!=null) );
                report = (JasperReport)JRLoader.loadObject(is);
            System.out.println(jasperFileName + " MyCn:" + (MyCn!=null) + " iStream:" + (is!=null) );
            System.out.println(">>>BBB>>> " + jasperFileName + " MyCn:" + (MyCn!=null) + " lspReport::" + (report!=null) );
            }         
            catch (JRException ex) {
             System.out.println("CHYBAAA: " + jasperFileName + " MyCn:" + (MyCn!=null) + " iStream:" + (is!=null) );
            }
           // System.out.println(jasperFileName + " MyCn:" + (MyCn==null));
//            jprint = (JasperPrint) JasperFillManager.fillReport(jasperFileName, hm, MyCn);
            jprint = (JasperPrint) JasperFillManager.fillReport(report, hm, MyCn.getConn());
            JPanel panel = ((JPanel)myObjectID);
           // JRViewer.AccessibleJPanel
            panel.setPreferredSize(new java.awt.Dimension(1000, 700));
            panel.setLayout(new java.awt.BorderLayout());
            panel.add(new JRViewer(jprint));
            panel.doLayout();
            panel.repaint();
            panel.revalidate(); 
/*
            ((JPanel)myObjectID).setVisible(true);
            JFrame frame = new JFrame("Report");
            frame.getContentPane().add(new JRViewer(jprint));
            frame.pack();
            frame.setVisible(true);
            */
/*
            JasperExportManager.exportReportToPdfFile(jprint, pdfFileName);
           File f = new File(pdfFileName);
           if (f.exists()) {
                    Desktop dt = Desktop.getDesktop();
               try {
                   dt.open(f);
               } catch (IOException ex) {
                   Logger.getLogger(Pnl_ReportViewer.class.getName()).log(Level.SEVERE, null, ex);
               }
           }
           */
       } catch (JRException ex) {
           Logger.getLogger(Pnl_ReportViewer.class.getName()).log(Level.SEVERE, null, ex);
       }

   // Export pdf file
   
   System.out.println("Done exporting reports to pdf");
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
