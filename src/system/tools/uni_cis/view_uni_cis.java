/*
 * Program je s��as�ou syst�mu EaSys V1
 * Each line should be prefixed with  * 
 */

package system.tools.uni_cis;

import eoc.EOC_message;
import eoc.database.DBconnection;
import eoc.xinterface.XMetaDataEditor;
import system.Kernel;
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author rvanya
 */
public class view_uni_cis extends eoc.xinterface.XViewer {
     private String  typ_ciselnika;
     private Integer id_ciselnika;
     private XMetaDataEditor metaEditor;
     private String          metaScheme;
    /**
     * Creates new form view_data_vytahov
     */
    public view_uni_cis() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSkratka = new javax.swing.JLabel();
        lblPolozka = new javax.swing.JLabel();
        dTF_c_naz_pol_cis = new eoc.widgets.DTfield();
        lblPopis = new javax.swing.JLabel();
        dTF_c_popis = new eoc.widgets.DTfield();
        dTF_c_skratka = new eoc.widgets.DTfield();
        dTF_c_popis1 = new eoc.widgets.DTfield();
        jLabel1 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setAutoscrolls(true);
        setFocusCycleRoot(false);
        setName("viewer_data_vytahov"); // NOI18N

        lblSkratka.setText("Výrobné číslo:");
        lblSkratka.setFocusTraversalPolicyProvider(true);

        lblPolozka.setText("Rok:");

        dTF_c_naz_pol_cis.setText("c_naz_pol_cis");
        dTF_c_naz_pol_cis.setDbFieldLabel("");
        dTF_c_naz_pol_cis.setDbFieldName("c_naz_pol_cis");
        dTF_c_naz_pol_cis.setDbFormatString("");
        dTF_c_naz_pol_cis.setDbTableName("eas_uni_cis");
        dTF_c_naz_pol_cis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dTF_c_naz_pol_cisActionPerformed(evt);
            }
        });

        lblPopis.setText("Evidenčné číslo");

        dTF_c_popis.setText("c_popis");
        dTF_c_popis.setDbFieldLabel("");
        dTF_c_popis.setDbFieldName("c_popis");
        dTF_c_popis.setDbFormatString("");
        dTF_c_popis.setDbTableName("eas_uni_cis");
        dTF_c_popis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dTF_c_popisActionPerformed(evt);
            }
        });

        dTF_c_skratka.setText("c_skratka");
        dTF_c_skratka.setDbFieldName("c_skratka");
        dTF_c_skratka.setDbTableName("eas_uni_cis");

        dTF_c_popis1.setText("c_differentation");
        dTF_c_popis1.setDbFieldLabel("");
        dTF_c_popis1.setDbFieldName("c_differentation");
        dTF_c_popis1.setDbFormatString("");
        dTF_c_popis1.setDbOnLeave("");
        dTF_c_popis1.setDbTableName("eas_uni_cis");
        dTF_c_popis1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dTF_c_popis1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Rozlišovací znak");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblSkratka, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(dTF_c_skratka, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dTF_c_naz_pol_cis, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                            .addComponent(lblPolozka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dTF_c_popis1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dTF_c_popis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPopis, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSkratka)
                    .addComponent(lblPolozka))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dTF_c_naz_pol_cis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dTF_c_skratka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPopis)
                .addGap(3, 3, 3)
                .addComponent(dTF_c_popis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dTF_c_popis1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    @Override
    public String initialize(Kernel kr, DBconnection cX) {
        super.initialize(kr, cX);
        krn.debugOut(this,5,MyCn.toString());
        this.setMasterTable("eas_uni_cis");
        //toto vsetko sa da generovat aj zo SUPER
        String setQueryBase = this.setQueryBase ("select * from eas_uni_cis");
        String setAppWhere = this.setAppWhere ("eas_uni_cis.id_eas_uni_cis=0");
        setMasterKey("id_eas_uni_cis");
        String rebuildQuery = this.rebuildQuery();
        String OpenQuery = this.OpenQuery();
        disableWidgets();
        return "";
   }

    @Override
    public String afterInitialize() {
        metaEditor.setEditing(false,false);
        return super.afterInitialize(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String displayRow() {
        try {
            super.displayRow(); //To change body of generated methods, choose Tools | Templates.
//            rs.beforeFirst();
            if (rs !=null) {
//                rs.beforeFirst();
//                rs.next();
                metaEditor.putMetaData(rs.getString("c_metadata"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(view_uni_cis.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }

    public void set_uni_cis_Keys(String sUniCisTyp, Integer idUniCisDef) {
        typ_ciselnika = sUniCisTyp;
        id_ciselnika  = idUniCisDef;
        System.out.println("SETTING_UNI_CIS_TO: " + typ_ciselnika + " ID:" + id_ciselnika);
        Object [][] rsArray;
        String sQry = "Select " +
                      "c_skrat_pol_label,i_skrat_pol_length" +
                      ",c_naz_pol_label,i_naz_pol_length" +
                      ",c_popis_pol_label,i_popis_pol_length" +
                      ",c_metadata" +
                " from eas_uni_cis_def where id_eas_uni_cis_def = " + id_ciselnika;
        rsArray = krn.SQLQ_getQueryResultSetAsArray(MyCn.getConn(), sQry, false);
        Object[] myRow = new Object[6];
        Object[] oRw = rsArray[0];
        lblSkratka.setText(oRw[0].toString());
//        dTF_c_skratka.getFormatter().
        lblPolozka.setText(oRw[2].toString());
        lblPopis.setText(oRw[4].toString());
        metaScheme = oRw[6].toString();
        metaEditor.setScheme(metaScheme); // odovzdanie schemy do editoru
        /*
        for (Object[] oRw : rsArray) {
            myRow[0] = oRw[1];
            myRow[1] = oRw[2];
            //((DefaultTableModel) jTb_names.getModel()).addRow(myRow);
        }
        */
        // tu sa menia nazvy labelov a dlzka DTvfieldov
        
    }
    
    private void dTF_c_naz_pol_cisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dTF_c_naz_pol_cisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dTF_c_naz_pol_cisActionPerformed

    private void dTF_c_popisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dTF_c_popisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dTF_c_popisActionPerformed

    private void dTF_c_popis1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dTF_c_popis1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dTF_c_popis1ActionPerformed

    @Override
    public String committxn(EOC_message eocMsg) {
            alFieldValuePairs.clear();
            Object[] avl1 = new Object[2];
            avl1[0] = "id_eas_uni_cis_def";
            avl1[1] = id_ciselnika;
            alFieldValuePairs.add(avl1);
            Object[] avl2 = new Object[2];
            avl2[0] = "c_typ_cis";
            avl2[1] = typ_ciselnika;
            alFieldValuePairs.add(avl2);
            Object[] avl3 = new Object[2];
            avl3[0] = "c_metadata";
            avl3[1] = metaEditor.getMetaData();
            alFieldValuePairs.add(avl3);

        return super.committxn(eocMsg); //To change body of generated methods, choose Tools | Templates.
    }

    public void setMetaDataEditor(XMetaDataEditor mtEdit) {
        metaEditor = mtEdit;
////        metaScheme = mtScheme;
////        metaEditor.setScheme(metaScheme);
    }    

    @Override
    public String disableWidgets() {
        if (metaEditor != null)
            metaEditor.setEditing(false, false);
        return super.disableWidgets(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String enableWidgets() {
        if (metaEditor != null)
            metaEditor.setEditing(true, sTxnType.equals("add"));
        return super.enableWidgets(); //To change body of generated methods, choose Tools | Templates.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private eoc.widgets.DTfield dTF_c_naz_pol_cis;
    private eoc.widgets.DTfield dTF_c_popis;
    private eoc.widgets.DTfield dTF_c_popis1;
    private eoc.widgets.DTfield dTF_c_skratka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblPolozka;
    private javax.swing.JLabel lblPopis;
    private javax.swing.JLabel lblSkratka;
    // End of variables declaration//GEN-END:variables
}
