/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package eoc.database;

import system.FnEaS;
import java.awt.Color;
import java.awt.Dimension;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import system.Kernel;
/**
 *
 * @author rvanya
 */
public class Pnl_DBconnect extends eoc.widgets.PObject {
    Connection   myConnection = null;
    DBconnection myDBconnection = null;
    String       myConnectionType; // WORK/OLAP/WWW/CRON_WORK
    boolean bDbIsConnected = false;
    /**
     * Creates new form EOC_DBconnect
     */
    public Pnl_DBconnect() {
        initComponents();
        setConnected(false);
        jLbl_connType.setBackground(Color.lightGray);
        myDBconnection = new DBconnection();
        myObjectID = this;
    }

    private Connection create_connection() throws SQLException {
      /*
     if (dbType.equals("mysql")) {
          DB_driver.setText("com.mysql.jdbc.Driver"); // ovladac mysql
          DB_driver.setEnabled(true);
          DB_URL.setText("jdbc:mysql://localhost:3306/easys");
          DB_username.setText("root");
          DB_password.setText("4g4w00"); 
      }
     */
        String dbType = (String) jCB_DBtype.getSelectedItem();
        dbType = dbType.toLowerCase();
        Connection cntn;
            
        krn.OutPrintln("Connecting database: " + dbType + " DB");
        String pwd = String.valueOf(DB_password.getPassword());
        cntn = DriverManager.getConnection(DB_URL.getText(), DB_username.getText(), pwd); // pripojenie na DB
        cntn.setAutoCommit(false);
        krn.setWorkConnection(DB_URL.getText(), DB_username.getText(), pwd);
        // nasledujuce tri riadky su len na test
        DatabaseMetaData dmd = cntn.getMetaData();
        String url = dmd.getURL();
        krn.OutPrintln("Connected databas URL=" + url);
        return cntn;
    }
    
    public void setConnType(String ctp, String myCTP) {
        jLbl_connType.setText(ctp);
        myConnectionType = myCTP;
        //"Connection_frame_" + myConnType
    }
    /*
    public Connection getConnection() {
        //krn.OutPrintln("EOC_DBconnect-isNUll=" + (myConn==null));
        return myConn;
    }
    */
     public DBconnection getDBconnection(boolean bAutoconnect) {
        //krn.OutPrintln("EOC_DBconnect-isNUll=" + (myConn==null));
         //060114 System.out.println("CONNCSTAT:" + bAutoconnect + (myDBconn.getConn() == null));
         if (bAutoconnect && (myDBconnection.getConn() == null))
             btn_TestSpojenia.doClick();
        return myDBconnection;
    }
   public void setDBselection(String sel) {
        jCB_DBtype.setSelectedItem(sel);
        ////krn.OutPrintln("selecting DB: " + sel);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING:
     * Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLbl_connType = new javax.swing.JLabel();
        jCB_DBtype = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        DB_driver = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        DB_URL = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        DB_username = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        DB_password = new javax.swing.JPasswordField();
        btn_TestSpojenia = new javax.swing.JButton();
        btn_SaveFrame = new javax.swing.JButton();
        lblimg_test = new javax.swing.JLabel();
        btn_odpojit = new javax.swing.JButton();
        jCHB_TCPconnection = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        rbVzhlad_1 = new javax.swing.JRadioButton();
        rbVzhlad_2 = new javax.swing.JRadioButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMinimumSize(new java.awt.Dimension(100, 100));

        jLbl_connType.setBackground(new java.awt.Color(255, 204, 204));
        jLbl_connType.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLbl_connType.setForeground(new java.awt.Color(0, 0, 153));
        jLbl_connType.setText("Master/Slave");

        jCB_DBtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sybase", "Postgres", "MySql", "Firebird" }));
        jCB_DBtype.setSelectedIndex(1);
        jCB_DBtype.setToolTipText("Typ pripájanej databázy (Sybase, Postgres, MySql, Firebird)");
        jCB_DBtype.setName("db_type"); // NOI18N
        jCB_DBtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_DBtypeActionPerformed(evt);
            }
        });

        jLabel2.setText("Typ databázy:");

        jLabel3.setText("Ovládač:");

        DB_driver.setText("ovládač");
        DB_driver.setToolTipText("Ovládač databázy (systém určuje automaticky,ale na testovanie je možné meniť - no nedoporučuje sa. :-)) ");
        DB_driver.setName("db_driver"); // NOI18N

        jLabel4.setText("Lokátor (URL):");

        DB_URL.setText("URL databázy");
        DB_URL.setToolTipText("Lokalizácia/adresa databázy");
        DB_URL.setName("db_url"); // NOI18N
        DB_URL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DB_URLActionPerformed(evt);
            }
        });

        jLabel5.setText("Užívateľské meno: ");

        DB_username.setText("meno užívateľa");
        DB_username.setToolTipText("Užívateľské meno (musí byť zadefinované v databáze aj v systéme EaSys + pridelené prístupové práva)");
        DB_username.setName("db_username"); // NOI18N
        DB_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DB_usernameActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Heslo:");

        DB_password.setText("jPasswordField1");
        DB_password.setToolTipText("Heslo užívateľa pre prístup k databáze");
        DB_password.setName("db_password"); // NOI18N

        btn_TestSpojenia.setText("Test spojenia");
        btn_TestSpojenia.setToolTipText("Pripojenie databázy použitím aktuálnych nastavení ");
        btn_TestSpojenia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TestSpojeniaActionPerformed(evt);
            }
        });

        btn_SaveFrame.setText("Ulož");
        btn_SaveFrame.setToolTipText("Uloženie aktuálnych nastavení (Voľba [ Pokračuj ] ich uloží autoaticky)");
        btn_SaveFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveFrameActionPerformed(evt);
            }
        });

        lblimg_test.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easys/res/img/LED1_0.png"))); // NOI18N
        lblimg_test.setText("jLabel1");
        lblimg_test.setToolTipText("Stav pripojenia databázy");

        btn_odpojit.setText("Odpojiť");
        btn_odpojit.setToolTipText("Odpojenie pripojenej databázy");
        btn_odpojit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_odpojitActionPerformed(evt);
            }
        });

        jCHB_TCPconnection.setSelected(true);
        jCHB_TCPconnection.setText("TCP connection");
        jCHB_TCPconnection.setToolTipText("Typ databázového pripojenia");
        jCHB_TCPconnection.setName("TCP_connection"); // NOI18N
        jCHB_TCPconnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCHB_TCPconnectionActionPerformed(evt);
            }
        });

        jLabel1.setText("Vzhlad:");

        buttonGroup1.add(rbVzhlad_1);
        rbVzhlad_1.setText("Základný");
        rbVzhlad_1.setToolTipText("Vzhlad obrazovky");
        rbVzhlad_1.setName("rbVzhlad_1"); // NOI18N
        rbVzhlad_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbVzhlad_1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbVzhlad_2);
        rbVzhlad_2.setSelected(true);
        rbVzhlad_2.setText("Rozšírený");
        rbVzhlad_2.setToolTipText("Vzhlad obrazovky");
        rbVzhlad_2.setName("rbVzhlad_2"); // NOI18N
        rbVzhlad_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbVzhlad_2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLbl_connType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbVzhlad_1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbVzhlad_2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DB_username)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DB_password))
                            .addComponent(DB_URL)
                            .addComponent(DB_driver)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jCB_DBtype, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_SaveFrame)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblimg_test, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_TestSpojenia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_odpojit, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCHB_TCPconnection, javax.swing.GroupLayout.PREFERRED_SIZE, 100, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl_connType, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(rbVzhlad_1)
                    .addComponent(rbVzhlad_2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCB_DBtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btn_TestSpojenia)
                    .addComponent(btn_SaveFrame)
                    .addComponent(lblimg_test, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_odpojit)
                    .addComponent(jCHB_TCPconnection))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(DB_driver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(DB_URL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DB_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(DB_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCB_DBtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_DBtypeActionPerformed
//// if (krn!=null) krn.krnMsg("jCB_DBtype >> AKCIÓ VAN, BAZMEG !!! -> " + evt.getActionCommand());

      String dbType = (String) jCB_DBtype.getSelectedItem();
      dbType = dbType.toLowerCase();

      if (dbType.equals("mysql")) {
          DB_driver.setText("com.mysql.jdbc.Driver"); // ovladac mysql
          DB_driver.setEnabled(true);
        if (jCHB_TCPconnection.isSelected()) {
          DB_URL.setText("jdbc:mysql://easys.nzbd.sk");
          DB_username.setText("eas");
          DB_password.setText("4G4w00"); 
        }
        else {
          DB_URL.setText("jdbc:mysql://localhost:3306/dochadzka");
          DB_username.setText("root");
          DB_password.setText("expert"); 
        }
      }
      else if (dbType.equals("postgres")) {
          DB_driver.setText("org.postgresql.Driver"); // ovladac mysql
          DB_driver.setEnabled(true);
        if (jCHB_TCPconnection.isSelected()) {
          DB_URL.setText("jdbc:postgresql://192.168.0.99:5432/easys");
          DB_username.setText("eas");
          DB_password.setText("eas4g4w00"); 
        }
        else {
          DB_URL.setText("jdbc:postgresql://Localhost:5432/easys");
          DB_username.setText("eas");
          DB_password.setText("eas4g4w00"); 
        }
      }
      else if (dbType.equals("sybase")) {
          DB_driver.setText("< Nie je potrebný >"); // ovladac nepotrebuje
          DB_driver.setEnabled(false);
          // Priklad LAN-connectu cez TCP
          // DB_URL.setText("jdbc:sqlanywhere:eng=sql12;database=nzbd;links=tcpip(host=127.0.0.1)");
          // DB_URL.setText("jdbc:sqlanywhere:uid=rvanya;pwd=4g4w00;eng=sql12;database=nzbd;links=tcpip(ip=192.168.1.88)");
          // Priklad Local-connectu na server, spusteny na aktualnom PC
          // DB_URL.setText("jdbc:sqlanywhere:uid=rvanya;pwd=4g4w00;eng=sql12");
        if (jCHB_TCPconnection.isSelected())
            DB_URL.setText("jdbc:sqlanywhere:eng=sql;database=nzbd;links=tcpip(host=192.168.1.110)");
        else
            DB_URL.setText("jdbc:sqlanywhere:eng=nzbd_test");
// 2016-1-6          DB_username.setText("rvanya");
// 2016-1-6         DB_password.setText("4g4w00"); 
// 2016-08-22         DB_username.setText("pklobucnik");
// 2016-08-22          DB_password.setText("peklo"); 
     }
      else if (dbType.equals("firebird")) {
          DB_driver.setText("< Nie je potrebný >"); // ovladac nepotrebuje
          DB_driver.setEnabled(false);
          DB_URL.setText("jdbc:firebirdsql:localhost/3050:D:\\EaSys\\Data\\FireBird\\REST.FDB");
          DB_username.setText("Rest");
          DB_password.setText("rest"); 
      }
  //      try {
            /* if (exDBtype.equals("mysql")) {
            Class.forName("com.mysql.jdbc.Driver"); // ovladac mysql
            exDBurl = "jdbc:mysql://localhost:3306/easys";
            exDBlogin = "root";
            exDBheslo = "4g4w00";
            }
            if (exDBtype.equals("postgres")) {
            Class.forName("org.postgresql.Driver"); // ovladac postgres
            exDBurl = "jdbc:postgresql://Localhost:5432/EaSys";
            exDBlogin = "eas";
            exDBheslo = "4g4w00";
            }
            
            if (exDBtype.equals("sybase")) {
            // pre Sybase jdbc4 driver Class.forName NETREBA !!!
            */
            //Class.forName("sap.sqlanywhere.Driver"); // ovladac postgres
            /*
            // PHENOM DBurl = "jdbc:sqlanywhere:uid=rvanya;pwd=4g4w00;eng=sql12;links=tcpip(host=192.168.1.101:2638)";
            // DBurl = "jdbc:sqlanywhere:uid=rvanya;pwd=4g4w00;eng=sql12;links=tcpip(host=192.168.1.105:2638");
            // FUNGUJUCE !
            exDBurl = "jdbc:sqlanywhere:uid=rvanya;pwd=4g4w00;eng=sql12";
            exDBlogin = "rvanya";
            exDBheslo = "4g4w00";
            }
            */
  //      } catch (ClassNotFoundException ex) {
  //          Logger.getLogger(Pnl_DBconnect.class.getName()).log(Level.SEVERE, null, ex);
  //      }
    }//GEN-LAST:event_jCB_DBtypeActionPerformed

    private void btn_TestSpojeniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TestSpojeniaActionPerformed
        String sErr = "";
        String pwd = new String(DB_password.getPassword()); 
        setConnected(false);
        try {
            if (myConnection != null) myConnection.close();
            lblimg_test.setIcon(new javax.swing.ImageIcon(getClass()
                       .getResource("/easys/res/img/LED1_WA.png"))); // NOI18N
            lblimg_test.repaint();

            //vytvorenie spojenia s databazou
            myConnection = null;
////            Kernel.staticMsg("Connecting with: " + DB_URL.getText() + " USER:" + DB_username.getText()
////                + " PASSWORD: " + pwd);
            /* do 2017-9-29            
            myConn = DriverManager.getConnection(DB_URL.getText(),
                     DB_username.getText(), pwd); // pripojenie na DB
            */
            /* po 2017-9-29 */
            Properties connProperties = new Properties();
            connProperties.put("user", DB_username.getText());
            connProperties.put("password", pwd);
//            connProperties.put("sql_role_name", "EAS");
            //connProperties.put("roleName", "EAS");
            connProperties.put("lc_ctype", "WIN1250");
            connProperties.put("charSet", "cp1250");
  //         connProperties.put("encoding", "NONE");
  //         connProperties.put("localencoding", "NONE");
//           connProperties.put("localEncoding", "WIN1250");
//lc_ctype, encoding, charSet or localEncoding            
// EXAMPLE:            lc_ctype = .... (example WIN1252
//            connProperties.put("role", "EAS");
            /////System.out.println("----newconnect----" + DB_URL.getText() + " user:" + DB_username.getText() + " pwd:" + pwd);
            try {
               Class.forName("com.mysql.jdbc.Driver");
/////                Class.forName("sap.sqlanywhere.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Pnl_DBconnect.class.getName()).log(Level.SEVERE, null, ex);
            }
            ////System.out.println("----newconnect----DVAAA");
            myConnection = DriverManager.getConnection(DB_URL.getText(), connProperties); // pripojenie na DB
            // TC pri verzii 17 to vyzaduje
            /****** 19.3.2022
            if (jCHB_TCPconnection.isSelected()) { 
                String sStm = "SET TEMPORARY OPTION CONNECTION_AUTHENTICATION=" 
                    + "'Company=ANASOFT APR s.r.o.;Application=DOMUS;" 
                    + "Signature=000fa55157edb8e14d818eb4fe3db41447146f1571g33cd1a53ca839a2aa06e56e792564b5d00708923'";
            System.out.println("SET TEMPORARY OPTION CONNECTION_AUTHENTICATION TO:\n      " 
                        + "Company=ANASOFT APR s.r.o.;Application=DOMUS;Signature=000fa55157edb8e14d8...xy");
                Statement stm = myConnection.createStatement();
                stm.execute(sStm);
            }
            ****/
        } catch (SQLException ex) {
            sErr = ex.getErrorCode() + "\n" + ex.getMessage() + "\n" + ex.getSQLState();
        }
////            System.out.println("----newconnect---NOTNULL-" + (myConnection != null));


            if (myConnection != null) {
                  lblimg_test.setIcon(new javax.swing.ImageIcon(getClass()
                             .getResource("/easys/res/img/LED1_OK.png")));
                lblimg_test.setToolTipText("<html>Spojenie na server <B>" + 
                            ((String) jCB_DBtype.getSelectedItem())
                             + "</B> je v poriadku.</html>");
            try {
                myConnection.setAutoCommit(false);
            } catch (SQLException ex) {
                Kernel.staticMsg("CONNECTION_ERROR: " + ex);
                Logger.getLogger(Pnl_DBconnect.class.getName()).log(Level.SEVERE, null, ex);
            }
                myDBconnection.setDBlayer(myConnectionType);
                myDBconnection.setDbDriverName(DB_driver.getText());
                myDBconnection.setURL(DB_URL.getText());
                myDBconnection.setUsr(DB_username.getText());
                myDBconnection.setPwd(pwd);
                myDBconnection.setDbType(jCB_DBtype.getSelectedItem().toString().toUpperCase(), myConnection);
                myDBconnection.setConnectionType(jCHB_TCPconnection.isSelected()?"TCP":"LOCAL");

            }
            else {
                lblimg_test.setIcon(new javax.swing.ImageIcon(getClass()
                           .getResource("/easys/res/img/LED1_ER.png")));
                lblimg_test.setToolTipText("<html>" 
                             + "Spojenie na server <B>" 
                             + ((String) jCB_DBtype.getSelectedItem())
                             + "</B> sa nedá nadviazať.<BR><BR>" 
                             + "<B>Dôvod:</B><BR>" + sErr 
                             + "</html>");
                myDBconnection.setDBlayer(null);
                /*
Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException
	at eoc.database.DBconnection.setDbDriverName(DBconnection.java:86)
        */
                myDBconnection.setDbDriverName(null);
                myDBconnection.setURL(null);
                myDBconnection.setUsr(null);
                myDBconnection.setPwd(null);
                myDBconnection.setDbType(null, null);
            }
            
        setConnected(myConnection != null);
        if (myConnection != null) {
            krn.setWorkConnection(DB_URL.getText(), DB_username.getText(), pwd);
        }
            
    }//GEN-LAST:event_btn_TestSpojeniaActionPerformed

    private void btn_SaveFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveFrameActionPerformed
        Map frm = this.saveFrameToDef();
    }//GEN-LAST:event_btn_SaveFrameActionPerformed

    private void DB_URLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DB_URLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DB_URLActionPerformed

    private void DB_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DB_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DB_usernameActionPerformed

    private void btn_odpojitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_odpojitActionPerformed
        lblimg_test.setIcon(new javax.swing.ImageIcon(getClass()
                           .getResource("/easys/res/img/LED1_0.png")));
        if (myConnection == null) {
           krn.Message("Databázové pripojenie neexistuje.");
        }
        else {
        try {
            myConnection.close();
            setConnected(false);
            myDBconnection.setDBlayer(null);
            myDBconnection.setDbDriverName(null);
            myDBconnection.setURL(null);
            myDBconnection.setUsr(null);
            myDBconnection.setPwd(null);
            myDBconnection.setDbType(null, null);
        } catch (SQLException ex) {
            Logger.getLogger(Pnl_DBconnect.class.getName()).log(Level.SEVERE, null, ex);
        }
            lblimg_test.setToolTipText("<html>" 
                             + "Spojenie na datbázový server <B>" 
                             + ((String) jCB_DBtype.getSelectedItem())
                             + "</B> prerušené užívateľom.<BR><BR>" 
                             + "</html>");
        }
    }//GEN-LAST:event_btn_odpojitActionPerformed
    
    private void jCHB_TCPconnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCHB_TCPconnectionActionPerformed
      //  if (bConnected) btn_odpojit.doClick(); // odpojenie aktualneho pripojenia
////        FnEaS.applyEvent(DB_URL,"AKSUNN");
        if (bDbIsConnected)
            FnEaS.applyEvent(btn_odpojit,"clicked");
        FnEaS.applyEvent(jCB_DBtype,"comboBoxChanged");
        // btn_TestSpojenia.doClick(); // Pokus o znovupripojenie
        /*
        if (jCHB_TCPconnection.isSelected())
            DB_UeTrgRL.setText("jdbc:sqlanywhere:eng=sql;database=nzbd;links=tcpip(host=192.168.1.110)");
        else
            DB_URL.setText("jdbc:sqlanywhere:eng=sql12");
        */
    }//GEN-LAST:event_jCHB_TCPconnectionActionPerformed

    private void setViewType(int typ) {
/*    if (typ==1) {
    }   
    else {
    } */
       jLabel3.setVisible(typ==2);
       jLabel4.setVisible(typ==2);
       DB_driver.setVisible(typ==2);
       DB_URL.setVisible(typ==2);
       jCB_DBtype.setEnabled(typ==1);
       //jCB_DBtype.getLayout().
       /*
       krn.OutPrintln("MISI " + this.getMinimumSize().toString());
       this.getBorder(). .paintBorder(this, null, typ, typ, typ, typ);
               */
       Dimension newSize = this.getMinimumSize();
      //// krn.OutPrintln("MYSIZZE " + newSize.toString());
       
       this.setPreferredSize(newSize);
       this.setSize(newSize);
       this.revalidate();
       this.repaint();
       //this.getBorder(). .paintBorder(this, null, 1, 1, newSize.width - 2 , newSize.height - 2);
       //this.doLayout();
       if (typ==1)
           this.setBorder(javax.swing.BorderFactory.createRaisedBevelBorder());
       else
           this.setBorder(javax.swing.BorderFactory.createEtchedBorder());
       JDialog jd; 
       jd = (JDialog) parentContainer;
       jd.revalidate();
       //.ppack();
       //this.pack();
       //jCB_DBtype.getParent().revalidate();
       //jCB_DBtype.getParent().doLayout();
       
       
    }
    
    private void rbVzhlad_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbVzhlad_1ActionPerformed
           setViewType(1);
    }//GEN-LAST:event_rbVzhlad_1ActionPerformed

    private void rbVzhlad_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbVzhlad_2ActionPerformed
           setViewType(2);
    }//GEN-LAST:event_rbVzhlad_2ActionPerformed

    public void saveConnectionForUser() throws IOException {
                 Map<String, String> mpf = this.saveFrameToDef();
                //krn.OutPrintln("COPIIING:: " + mpf.toString());
                krn.setStanicaUserAttribute("Connection_frame_" + myConnectionType, mpf.toString());
    }    

    @Override
    public Map<String, String> saveFrameToDef() {
       //Kernel.Msg("DB_usernameISS:" + DB_username.getText());
        return super.saveFrameToDef(); //To change body of generated methods, choose Tools | Templates.
    }
    
    private void setConnected(boolean b) {
        bDbIsConnected = b;
        btn_odpojit.setEnabled(b);
    }
    
    public boolean initFromFromSaved() {
        String s =  krn.getStationProperty("login_work");
        ///// System.out.println(">>>>>>!!!!!INITFROMPRP >>>>>:" + s);
        Map<String, String> frmValues; // posledny obsah connect-panelu
        frmValues = krn.defStringToFrameDef(s);
        krn.restorFrameFromDef(myObjectID, frmValues);
        rbVzhlad_1.setSelected(true);
        rbVzhlad_1ActionPerformed(null);
        FnEaS.applyEvent(jCB_DBtype,"comboBoxChanged");

        return true;
    }
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DB_URL;
    private javax.swing.JTextField DB_driver;
    private javax.swing.JPasswordField DB_password;
    private javax.swing.JTextField DB_username;
    private javax.swing.JButton btn_SaveFrame;
    private javax.swing.JButton btn_TestSpojenia;
    private javax.swing.JButton btn_odpojit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox jCB_DBtype;
    private javax.swing.JCheckBox jCHB_TCPconnection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLbl_connType;
    private javax.swing.JLabel lblimg_test;
    private javax.swing.JRadioButton rbVzhlad_1;
    private javax.swing.JRadioButton rbVzhlad_2;
    // End of variables declaration//GEN-END:variables

    private void dolayout() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
