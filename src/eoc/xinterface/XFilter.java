/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package eoc.xinterface;

import eoc.EOC_message;
import system.Kernel;

/**
 *
 * @author rvanya
 */
public class XFilter extends eoc.widgets.PObject implements IXFilter {
    private boolean bActive = true;
    private String sFilterWhere = "";
    /**
     * Creates new form XFilter
     */
    public XFilter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        jButton1.setText("Filtruj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Filtrovať");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jButton1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Kernel.staticMsg("Žial metóda 'buildAndSendFilter()'\nnie je ešte imlementovaná.\n\nTak že sa zatial nefiltruje.    :-)");
        buildAndSendFilter();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        setActive(jCheckBox1.isSelected());
    }//GEN-LAST:event_jCheckBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void buildAndSendFilter(){
        sFilterWhere = buildFilter();
           EOC_message msg = new EOC_message(this,"filterChanged", "", "");
           krn.krn_sendMessage(this,msg,"filter","target");
////        String krn_sendMessage = krn.krn_sendMessage
////         ((Object) this, "filterChanged", "", "filter", "target" , "");
    }

    @Override
    public void setActive(boolean bActv) {

        if (bActive == bActv) return; // ked sa to neprepina, tak sa nic nedeje
        
        bActive = bActv;
        EOC_message msg = new EOC_message(this,"filterChanged", "", "");
        krn.krn_sendMessage(this,msg,"filter","target");
////        krn.krn_sendMessage ((Object) this, "fiterChanged", 
////            (bActive ? sFilterWhere : ""),"filter", "target" , "");
    }

    @Override
    public String buildFilter() {
        String newFlt = "";
        return newFlt;
    }
}
