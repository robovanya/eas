/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package eoc.widgets;

import eoc.EOC_message;
import eoc.IEOC_Object;
import eoc.database.DBconnection;
import java.awt.AWTEvent;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import system.FnEaS;
import system.Kernel;

/**
 *
 * @author rvanya
 */
public class Pnl_Navigation extends PObject {

    /**
     * Creates new form Pnl_Navigation
     */
    Boolean btnStates[] = {true,true,true,true} ;
    private BufferedImage master_first;
    private BufferedImage master_next;
    private BufferedImage master_prev;
    private BufferedImage master_last;

    public Pnl_Navigation() {
        setMyObjectID(this);
        try {
            master_first = ImageIO.read(getClass().getResource("/easys/res/img/first.png"));
            master_next  = ImageIO.read(getClass().getResource("/easys/res/img/next.png"));
            master_prev  = ImageIO.read(getClass().getResource("/easys/res/img/prev.png"));
            master_last  = ImageIO.read(getClass().getResource("/easys/res/img/last.png"));
            ;       } catch (IOException ex) {
            Logger.getLogger(Pnl_Navigation.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btn_first = new javax.swing.JButton();
        btn_prev = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        btn_last = new javax.swing.JButton();

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anywhereKeyPressed(evt);
            }
        });

        jToolBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btn_first.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easys/res/img/first.png"))); // NOI18N
        btn_first.setToolTipText("Skoč na prvý záznam");
        btn_first.setAutoscrolls(true);
        btn_first.setFocusable(false);
        btn_first.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_first.setMaximumSize(new java.awt.Dimension(43, 43));
        btn_first.setMinimumSize(new java.awt.Dimension(43, 43));
        btn_first.setPreferredSize(new java.awt.Dimension(43, 43));
        btn_first.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_firstActionPerformed(evt);
            }
        });
        btn_first.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_firstanywhereKeyPressed(evt);
            }
        });
        jToolBar1.add(btn_first);

        btn_prev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easys/res/img/prev.png"))); // NOI18N
        btn_prev.setToolTipText("Skoč na predošlí záznam");
        btn_prev.setFocusable(false);
        btn_prev.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_prev.setMaximumSize(new java.awt.Dimension(43, 43));
        btn_prev.setMinimumSize(new java.awt.Dimension(43, 43));
        btn_prev.setPreferredSize(new java.awt.Dimension(43, 43));
        btn_prev.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prevActionPerformed(evt);
            }
        });
        btn_prev.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anywhereKeyPressed(evt);
            }
        });
        jToolBar1.add(btn_prev);

        btn_next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easys/res/img/next.png"))); // NOI18N
        btn_next.setToolTipText("Skoč na ďalší záznam");
        btn_next.setFocusable(false);
        btn_next.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_next.setMaximumSize(new java.awt.Dimension(43, 43));
        btn_next.setMinimumSize(new java.awt.Dimension(43, 43));
        btn_next.setPreferredSize(new java.awt.Dimension(43, 43));
        btn_next.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });
        btn_next.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anywhereKeyPressed(evt);
            }
        });
        jToolBar1.add(btn_next);

        btn_last.setIcon(new javax.swing.ImageIcon(getClass().getResource("/easys/res/img/last.png"))); // NOI18N
        btn_last.setToolTipText("Skoč na posledný záznam");
        btn_last.setFocusable(false);
        btn_last.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_last.setMaximumSize(new java.awt.Dimension(43, 43));
        btn_last.setMinimumSize(new java.awt.Dimension(23, 23));
        btn_last.setPreferredSize(new java.awt.Dimension(43, 43));
        btn_last.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lastActionPerformed(evt);
            }
        });
        btn_last.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anywhereKeyPressed(evt);
            }
        });
        jToolBar1.add(btn_last);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prevActionPerformed
        EOC_message msg = new EOC_message(this,"goToPrev", "", "");
        String krn_sendMessage = krn.krn_sendMessage ((IEOC_Object)myObjectID, msg, "navigation", "target" );
    }//GEN-LAST:event_btn_prevActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        EOC_message msg = new EOC_message(this,"goToNext", "", "");
        String krn_sendMessage = krn.krn_sendMessage ((IEOC_Object)myObjectID, msg, "navigation", "target" );
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lastActionPerformed
        EOC_message msg = new EOC_message(this,"goToLast", "", "");
        String krn_sendMessage = krn.krn_sendMessage ((IEOC_Object)myObjectID, msg, "navigation", "target" );
             btn_prev.requestFocus();
    }//GEN-LAST:event_btn_lastActionPerformed

    // volana je z key-listenerov vsetkych tlacitok
    private void anywhereKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anywhereKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            btn_prev.getActionListeners()[0].actionPerformed(new ActionEvent(this,1001,""));
        } 
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            btn_next.getActionListeners()[0].actionPerformed(new ActionEvent(this,1001,""));
        } 
        if ((evt.getKeyCode() == KeyEvent.VK_HOME) && evt.isControlDown()) {
            btn_first.getActionListeners()[0].actionPerformed(new ActionEvent(this,1001,""));
        } 
        if ((evt.getKeyCode() == KeyEvent.VK_END) && evt.isControlDown()) {
            btn_last.getActionListeners()[0].actionPerformed(new ActionEvent(this,1001,""));
        } 
        if (evt.getKeyCode() == KeyEvent.VK_PAGE_UP) {
            EOC_message msg = new EOC_message(this,"_evt_vk_page_up", null, "");
            String krn_sendMessage = krn.krn_sendMessage ((IEOC_Object)myObjectID, msg, "navigation", "target" );
        } 
        if (evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN) {
            EOC_message msg = new EOC_message(this,"_evt_vk_page_down", null, "");
            String krn_sendMessage = krn.krn_sendMessage ((IEOC_Object)myObjectID, msg, "navigation", "target" );
        } 
                
    }//GEN-LAST:event_anywhereKeyPressed

    private void btn_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_firstActionPerformed
        EOC_message msg = new EOC_message(this,"goToFirst", "", "");
        String krn_sendMessage = krn.krn_sendMessage ((IEOC_Object)myObjectID, msg, "navigation", "target" );
        btn_next.requestFocus();
    }//GEN-LAST:event_btn_firstActionPerformed

    private void btn_firstanywhereKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_firstanywhereKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_firstanywhereKeyPressed
     @Override
    public String receiveMessage(EOC_message eocMsg) {

        // musi byt ako prva instrukcia v metode !!!
        if (eocMsg==null) return FnEaS.nullEocMessageResponse(myObjectID);
        
         krn.debugOut(this,5, "EOC_Pnl_NAV-receiving: " + eocMsg.getMessage());
         if (eocMsg.getSender() == myObjectID) return "";
////             System.out.println("@@@@@@PNLNAVRECEIV-" + sMessage);
         if (eocMsg.getMessage().equals("firstRow")) {
             krn.debugOut(this,0,  "receiving:" + eocMsg.getMessage());
             btn_first.setEnabled(false);
             btn_prev.setEnabled(false);
             btn_next.setEnabled(true);
             btn_last.setEnabled(true);
             saveBtnStates();  // ulozenie stavu tlacitok
          return "";
         }
         if (eocMsg.getMessage().equals("lastRow")) {
             krn.debugOut(this,0,  "receiving:" + eocMsg.getMessage());
             btn_first.setEnabled(true);
             btn_prev.setEnabled(true);
             btn_next.setEnabled(false);
             btn_last.setEnabled(false);
             saveBtnStates();  // ulozenie stavu tlacitok
          return "";
         }
         if (eocMsg.getMessage().equals("notFirstOrLast")) {
             krn.debugOut(this,0,  "receiving:" + eocMsg.getMessage());
             btn_first.setEnabled(true);
             btn_prev.setEnabled(true);
             btn_next.setEnabled(true);
             btn_last.setEnabled(true);
             saveBtnStates();  // ulozenie stavu tlacitok
          return "";
         }
         if (eocMsg.getMessage().equals("noRowAvailable") | eocMsg.getMessage().equals("oneRow")) {
             krn.debugOut(this,0,  "receiving:" + eocMsg.getMessage());
             btn_first.setEnabled(false);
             btn_prev.setEnabled(false);
             btn_next.setEnabled(false);
             btn_last.setEnabled(false);
             saveBtnStates();  // ulozenie stavu tlacitok
         return "";
         }
         if (eocMsg.getMessage().equals("freezeInterface")) {
             krn.debugOut(this,0,  "receiving:" + eocMsg.getMessage());
            btnStates[0] = btn_first.isEnabled();
            btnStates[1] = btn_prev.isEnabled();
            btnStates[2] = btn_next.isEnabled();
            btnStates[3] = btn_last.isEnabled();
             btn_first.setEnabled(false);
             btn_prev.setEnabled(false);
             btn_next.setEnabled(false);
             btn_last.setEnabled(false);
             ((PObject)myObjectID).setEnabled(false); 
    //        krn.krnMsg("tgDisabled:");
             return "";
         }
         if (eocMsg.getMessage().equals("unfreezeInterface")) {
             krn.debugOut(this,0,  "receiving:" + eocMsg.getMessage());
             btn_first.setEnabled(btnStates[0]);
             btn_prev.setEnabled(btnStates[1]);
             btn_next.setEnabled(btnStates[2]);
             btn_last.setEnabled(btnStates[3]);
             ((PObject)myObjectID).setEnabled(true); 
             return "";
         }
         String supRetMsg = super.receiveMessage(eocMsg);
        if (supRetMsg.equals("")) return ""; // spravu spracoval rodic
        return "NOTRECEIVED";
     }   
     
// ulozenie aktulne platneho stavu tlacitok     
public void saveBtnStates() { 
             btnStates[0] = btn_first.isEnabled();
             btnStates[1] = btn_prev.isEnabled();
             btnStates[2] = btn_next.isEnabled();
             btnStates[3] = btn_last.isEnabled();
    
}

    @Override
    public String initialize(Kernel kr, DBconnection cX) {
        super.initialize(kr, cX); //To change body of generated methods, choose Tools | Templates.
                  btn_first.addComponentListener(new ComponentAdapter() {

                        @Override
                        public void componentResized(ComponentEvent e) {
                            if (1==1) return;
                            JButton btn = (JButton) e.getComponent();
                            Dimension size = btn.getSize();
                            Insets insets = btn.getInsets();
                            size.width -= insets.left + insets.right;
                            size.height -= insets.top + insets.bottom;
                            if (size.width > size.height) {
                                size.width = -1;
                            } else {
                                size.height = -1;
                            }
                            Image scaled = master_first.getScaledInstance(size.width, size.height, java.awt.Image.SCALE_SMOOTH);
                            btn.setIcon(new ImageIcon(scaled));
                        }

                    });
        return "";
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_first;
    private javax.swing.JButton btn_last;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_prev;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
