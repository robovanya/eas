/*
 * Program je s��as�ou syst�mu EaSys V2
 * 
 * EaSys je volne ��rite�n� k�d.
 */

package test.portfinder;

import java.awt.Color;
import java.io.*;
import java.net.MalformedURLException;
import java.net.Socket;
import java.net.URL;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import test.RaTaTaTa_portFinder;
import static test.RaTaTaTa_portFinder.srvListening;

/**
 *
 * @author rvanya
 */
public class P_portFinder extends javax.swing.JPanel {
//            String ipBase = "188.215.41.246";   
//            String ipBase = "192.168.0.";   
    DefaultListModel lmd = new DefaultListModel();
//    String ipBase = "192.168.1.240";    // win10
    String ipBase = "70.98.79.55";    // win10
    

    /**
     * Creates new form PRaTaTaTaa_portFinder
     */
    public P_portFinder() {
        initComponents();
        tf_ip.setText(ipBase);
        ls_ok_ports.setModel(lmd);
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ls_ok_ports = new javax.swing.JList();
        lbl_cinn = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tf_ip = new javax.swing.JTextField();
        cb_IbaZname = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tf_scannedPort = new javax.swing.JTextField();
        btn_HTML_port_80 = new javax.swing.JButton();
        btn_WhoIs_port_81 = new javax.swing.JButton();

        setFocusCycleRoot(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        ls_ok_ports.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        ls_ok_ports.setName("ls_ok_ports"); // NOI18N
        jScrollPane1.setViewportView(ls_ok_ports);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                .addContainerGap())
        );

        lbl_cinn.setBackground(java.awt.Color.cyan);
        lbl_cinn.setText("jLabel3");
        lbl_cinn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lbl_cinn.setName("lbl_cinn"); // NOI18N
        lbl_cinn.setOpaque(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel1.setText("IP adress:");
        jLabel1.setName("jLabel1"); // NOI18N

        tf_ip.setText("188.215.41.247");
        tf_ip.setName("tf_ip"); // NOI18N
        tf_ip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_ipActionPerformed(evt);
            }
        });

        cb_IbaZname.setSelected(true);
        cb_IbaZname.setText("Iba zname porty");
        cb_IbaZname.setName("cb_IbaZname"); // NOI18N

        jButton1.setText("Start scan");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Scanned port:");
        jLabel2.setName("jLabel2"); // NOI18N

        tf_scannedPort.setName("tf_scannedPort"); // NOI18N

        btn_HTML_port_80.setText("HTML port-80 ->");
        btn_HTML_port_80.setName("btn_HTML_port_80"); // NOI18N
        btn_HTML_port_80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HTML_port_80ActionPerformed(evt);
            }
        });

        btn_WhoIs_port_81.setText("WhoIs port-80 ->");
        btn_WhoIs_port_81.setName("btn_WhoIs_port_81"); // NOI18N
        btn_WhoIs_port_81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_WhoIs_port_81ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(tf_ip, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cb_IbaZname)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_WhoIs_port_81, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_scannedPort, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_HTML_port_80)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(cb_IbaZname)
                    .addComponent(jLabel2)
                    .addComponent(tf_scannedPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_HTML_port_80)
                    .addComponent(btn_WhoIs_port_81))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_cinn, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_cinn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        startScan();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tf_ipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_ipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_ipActionPerformed

    private void btn_HTML_port_80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HTML_port_80ActionPerformed
            URL url;
        try {
//            url = new URL("http://70.98.79.55");
            url = new URL("http://" + tf_ip.getText());
        } catch (MalformedURLException ex) {
            ex.printStackTrace();
            return;
        }
        String hostname = url.getHost();
        System.out.println("hostname:" + hostname);
        int port = 80;
        try (Socket socket = new Socket(hostname, port)) {
 
            OutputStream output = socket.getOutputStream();
            PrintWriter writer = new PrintWriter(output, true);
 
 //           writer.println("HEAD " + url.getPath() + " HTTP/1.1");
            writer.println("HEAD " + ""+ " HTTP/1.1");
//            writer.println("Host: " + hostname);
            writer.println("Host: google.com");
            writer.println("User-Agent: Simple Http Client");
            writer.println("Accept: text/html");
            writer.println("Accept-Language: en-US");
            writer.println("Connection: close");
            writer.println();
 
            InputStream input = socket.getInputStream();
 
            BufferedReader reader = new BufferedReader(new InputStreamReader(input));
 
            String line;
 
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
        } catch (UnknownHostException ex) {
 
            System.out.println("Server not found: " + ex.getMessage());
 
        } catch (IOException ex) {
 
            System.out.println("I/O error: " + ex.getMessage());

        }
        System.out.println("FINITO");
        
         // TODO add your handling code here:
    }//GEN-LAST:event_btn_HTML_port_80ActionPerformed

    private void btn_WhoIs_port_81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_WhoIs_port_81ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_WhoIs_port_81ActionPerformed
void startScan() {
        try {
//            String sRegisteredPorts = "1,7,9,13,17,19,20,21,22,23,25,53,67,68,69,70,79,80,88,110,113,119,139,143,161,162,514,443,445,666,993,995,1080,1194,1352,1433,1434,1984,3128,3306,3389,5060,5190,5222,5269,5432,6000,6667,8000,8080,8118,9009,1887,1521,2082,2083,2086,2087,5000,5223,5800,5900,6881,6969,27960,31337";
            String sRegisteredPorts = "20,21,22,23,25,53,67,68,69,70,79,80,88,110,113,119,139,143,161,162,514,443,445,666,993,995,1080,1194,1352,1433,1434,1984,3128,3306,3389,5060,5190,5222,5269,5432,6000,6667,8000,8080,8118,9009,1887,1521,2082,2083,2086,2087,5000,5223,5800,5900,6881,6969,27960,31337";
            String[] aRegisteredPorts = sRegisteredPorts.split(",");
            if (cb_IbaZname.isSelected()) scanArray(aRegisteredPorts);
            else scanArray(aRegisteredPorts); //scanAllPorts();
        } catch (IOException ex) {
            Logger.getLogger(P_portFinder.class.getName()).log(Level.SEVERE, null, ex);
        }
}

void scanArray(final String[] scnArr) throws IOException {
   new Thread(new Runnable() { public void run() {
    
   Socket sock = null;
   boolean bListen = false;
   lmd.removeAllElements();
//qq   ls_ok_ports.revalidate();
//qq   ls_ok_ports.repaint();

   lbl_cinn.setBackground(Color.YELLOW);
   lbl_cinn.setForeground(Color.BLUE);
   lbl_cinn.setText("Port scanning in progress ... ");
   String ipFull = tf_ip.getText().trim();   
   for (int i = 0; i < scnArr.length; i++) {
       if (sock != null) try {
           sock.close();
       } catch (IOException ex) {
           Logger.getLogger(P_portFinder.class.getName()).log(Level.SEVERE, null, ex);
       }
       int portnum = Integer.parseInt(scnArr[i]);
       tf_scannedPort.setText(scnArr[i] + "...");
//qq       tf_scannedPort.repaint();
        bListen = srvListening(ipFull,portnum);
       //Thread.sleep(250);

        if (bListen) {
           lmd.addElement("port: " + ipFull + ":" + portnum + "  OK");
           System.out.println();
           System.out.println("port: " + ipFull + ":" + portnum + "  OK");
       }
       else {
           System.out.print(portnum + "..");
       }
   }
   lbl_cinn.setBackground(Color.CYAN);
   lbl_cinn.setForeground(Color.BLACK);
   lbl_cinn.setText("Port scanning finished.");
   }}).start();

}  // scanArray(String[] scnArr) {
/*
private void scanAllPorts() {
    Socket sock = null;
//            String ipBase = "188.215.41.246";   
//            String ipBase = "192.168.0.";   
            //String ipBase = "82.119.116.";   
            String ipFull = null;   
            //while (true) {
           try { 
                for (int ip = 2; ip < 3; ip++) {
                   ipFull = ipBase + ip;
                   System.out.println("IP: " + ipFull);
                   if (sock != null) sock.close();
                   System.out.print("portscan: ");
                   for (int portnum = 1; portnum < 65536; portnum++) {
        if (srvListening(ipFull,portnum)) {
             System.out.println();
             System.out.println("port: " + ipFull + ":" + portnum + "  OK");
             System.out.print("portscan ..: ");
        }
        else
//             System.out.print("port: " + ipFull + ":" + portnum + "  none");
             System.out.print(portnum + "..");
                        
                   }
                }
            }   catch (IOException ex) {
//                 System.out.println(ipFull + ":" + portnum);
                    java.util.logging.Logger.getLogger(RaTaTaTa_portFinder.class.getName()).log(Level.SEVERE, null, ex);
                }
}  // private void scanAllPorts() {
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_HTML_port_80;
    private javax.swing.JButton btn_WhoIs_port_81;
    private javax.swing.JCheckBox cb_IbaZname;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_cinn;
    private javax.swing.JList ls_ok_ports;
    private javax.swing.JTextField tf_ip;
    private javax.swing.JTextField tf_scannedPort;
    // End of variables declaration//GEN-END:variables
}
